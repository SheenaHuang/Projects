<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0515.1028                               -->
<workbook original-version='18.1' source-build='2019.1.4 (20191.19.0515.1028)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Custom SQL Query+ (yelpdata)' inline='true' name='federated.01hv7ur040hvum12ifrsb0s9bl8x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.66.247.216' name='mysql.0vl8n3j0hvuqqs1fgmomh17jbj9w'>
            <connection class='mysql' dbname='yelpdata' odbc-native-protocol='' one-time-sql='' port='3306' server='34.66.247.216' source-charset='' username='sheenahuang' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Custom SQL Query].[business_id]' />
              <expression op='[Checkin].[business_id]' />
            </expression>
          </clause>
          <relation connection='mysql.0vl8n3j0hvuqqs1fgmomh17jbj9w' name='Custom SQL Query' type='text'>Select * from Restaurant&#10;where name in (&apos;Starbucks&apos;,&apos;Kung Fu Tea&apos;,&apos;McDonald\&apos;s&apos;, &apos;Pizza Hut&apos;,&apos;Dunkin\&apos; Donuts&apos;)</relation>
          <relation connection='mysql.0vl8n3j0hvuqqs1fgmomh17jbj9w' name='Checkin' table='[Checkin]' type='table' />
        </relation>
        <cols>
          <map key='[business_id (Checkin)]' value='[Checkin].[business_id]' />
          <map key='[business_id]' value='[Custom SQL Query].[business_id]' />
          <map key='[category_id]' value='[Custom SQL Query].[category_id]' />
          <map key='[checkin_id]' value='[Checkin].[checkin_id]' />
          <map key='[checkins]' value='[Checkin].[checkins]' />
          <map key='[hour]' value='[Checkin].[hour]' />
          <map key='[name]' value='[Custom SQL Query].[name]' />
          <map key='[reviewcount]' value='[Custom SQL Query].[reviewcount]' />
          <map key='[stars]' value='[Custom SQL Query].[stars]' />
          <map key='[weekday]' value='[Checkin].[weekday]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>225</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>4</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewcount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[reviewcount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>reviewcount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>checkin_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[checkin_id]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>checkin_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id (Checkin)]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>checkins</remote-name>
            <remote-type>3</remote-type>
            <local-name>[checkins]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>checkins</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='business id (Checkin)' datatype='string' name='[business_id (Checkin)]' role='dimension' type='nominal' />
      <column caption='Checkin Id' datatype='integer' name='[checkin_id]' role='dimension' type='ordinal' />
      <column caption='Checkins' datatype='integer' name='[checkins]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='quantitative' />
      <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.518707' measure-ordering='alphabetic' measure-percentage='0.481293' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='city+ (yelpdata)' inline='true' name='federated.1tnjn8x09scham1axbljb1kh7cp2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.66.247.216' name='mysql.1hrxq8p0qbrq4f107biq51skttug'>
            <connection class='mysql' dbname='yelpdata' odbc-native-protocol='' one-time-sql='' port='3306' server='34.66.247.216' source-charset='' username='sheenahuang' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Restaurant].[category_id]' />
              <expression op='[Category].[category_id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Address].[business_id]' />
                <expression op='[Restaurant].[business_id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[City].[city_id]' />
                  <expression op='[Address].[city_id]' />
                </expression>
              </clause>
              <relation connection='mysql.1hrxq8p0qbrq4f107biq51skttug' name='City' table='[City]' type='table' />
              <relation connection='mysql.1hrxq8p0qbrq4f107biq51skttug' name='Address' table='[Address]' type='table' />
            </relation>
            <relation connection='mysql.1hrxq8p0qbrq4f107biq51skttug' name='Restaurant' table='[Restaurant]' type='table' />
          </relation>
          <relation connection='mysql.1hrxq8p0qbrq4f107biq51skttug' name='Category' table='[Category]' type='table' />
        </relation>
        <cols>
          <map key='[address]' value='[Address].[address]' />
          <map key='[address_id]' value='[Address].[address_id]' />
          <map key='[area]' value='[City].[area]' />
          <map key='[business_id (Restaurant)]' value='[Restaurant].[business_id]' />
          <map key='[business_id]' value='[Address].[business_id]' />
          <map key='[category]' value='[Category].[category]' />
          <map key='[category_id (Category)]' value='[Category].[category_id]' />
          <map key='[category_id]' value='[Restaurant].[category_id]' />
          <map key='[city_id (Address)]' value='[Address].[city_id]' />
          <map key='[city_id]' value='[City].[city_id]' />
          <map key='[city_name]' value='[City].[city_name]' />
          <map key='[demo_secondmajority]' value='[City].[demo_secondmajority]' />
          <map key='[demographic_majority]' value='[City].[demographic_majority]' />
          <map key='[latitude]' value='[Address].[latitude]' />
          <map key='[longitude]' value='[Address].[longitude]' />
          <map key='[median_income]' value='[City].[median_income]' />
          <map key='[name]' value='[Restaurant].[name]' />
          <map key='[population]' value='[City].[population]' />
          <map key='[post_code]' value='[Address].[post_code]' />
          <map key='[reviewcount]' value='[Restaurant].[reviewcount]' />
          <map key='[stars]' value='[Restaurant].[stars]' />
          <map key='[state (Address)]' value='[Address].[state]' />
          <map key='[state]' value='[City].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>city_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[city_id]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>city_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>city_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>4</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_income</remote-name>
            <remote-type>4</remote-type>
            <local-name>[median_income]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>median_income</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>demographic_majority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[demographic_majority]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>demographic_majority</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>demo_secondmajority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[demo_secondmajority]</local-name>
            <parent-name>[City]</parent-name>
            <remote-alias>demo_secondmajority</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[address_id]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>address_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>225</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[city_id (Address)]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>city_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[post_code]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>post_code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state (Address)]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Address]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id (Restaurant)]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>225</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>4</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewcount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[reviewcount]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>reviewcount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id (Category)]</local-name>
            <parent-name>[Category]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Category]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Address Id' datatype='integer' name='[address_id]' role='dimension' type='ordinal' />
      <column caption='Area' datatype='real' name='[area]' role='measure' type='quantitative' />
      <column caption='business id (Restaurant)' datatype='string' name='[business_id (Restaurant)]' role='dimension' type='nominal' />
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='category id (Category)' datatype='integer' name='[category_id (Category)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='city id (Address)' datatype='integer' name='[city_id (Address)]' role='dimension' type='ordinal' />
      <column caption='City Id' datatype='integer' name='[city_id]' role='dimension' type='ordinal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Demo Secondmajority' datatype='string' name='[demo_secondmajority]' role='dimension' type='nominal' />
      <column caption='Demographic Majority' datatype='string' name='[demographic_majority]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Income' datatype='real' name='[median_income]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Post Code' datatype='integer' name='[post_code]' role='dimension' type='ordinal' />
      <column caption='Reviewcount' datatype='integer' name='[reviewcount]' role='measure' type='quantitative' />
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
      <column datatype='string' name='[state (Address)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='state, city_name'>
          <field>[city_name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.518707' measure-ordering='alphabetic' measure-percentage='0.481293' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Restaurant + checkin' inline='true' name='federated.0ky0a4x04ka1501421enq19wbpto' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.66.247.216' name='mysql.0r1i5n61cz25z91gli8oa0uou2gf'>
            <connection class='mysql' dbname='yelpdata' odbc-native-protocol='' one-time-sql='' port='3306' server='34.66.247.216' source-charset='' username='sheenahuang' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Restaurant].[business_id]' />
              <expression op='[Checkin].[business_id]' />
            </expression>
          </clause>
          <relation connection='mysql.0r1i5n61cz25z91gli8oa0uou2gf' name='Restaurant' table='[Restaurant]' type='table' />
          <relation connection='mysql.0r1i5n61cz25z91gli8oa0uou2gf' name='Checkin' table='[Checkin]' type='table' />
        </relation>
        <cols>
          <map key='[business_id (Checkin)]' value='[Checkin].[business_id]' />
          <map key='[business_id]' value='[Restaurant].[business_id]' />
          <map key='[category_id]' value='[Restaurant].[category_id]' />
          <map key='[checkin_id]' value='[Checkin].[checkin_id]' />
          <map key='[checkins]' value='[Checkin].[checkins]' />
          <map key='[hour]' value='[Checkin].[hour]' />
          <map key='[name]' value='[Restaurant].[name]' />
          <map key='[reviewcount]' value='[Restaurant].[reviewcount]' />
          <map key='[stars]' value='[Restaurant].[stars]' />
          <map key='[weekday]' value='[Checkin].[weekday]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>225</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>4</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewcount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[reviewcount]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>reviewcount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[Restaurant]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>checkin_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[checkin_id]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>checkin_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id (Checkin)]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>500</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>checkins</remote-name>
            <remote-type>3</remote-type>
            <local-name>[checkins]</local-name>
            <parent-name>[Checkin]</parent-name>
            <remote-alias>checkins</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='business id (Checkin)' datatype='string' name='[business_id (Checkin)]' role='dimension' type='nominal' />
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Checkin Id' datatype='integer' name='[checkin_id]' role='dimension' type='ordinal' />
      <column caption='Checkins' datatype='integer' name='[checkins]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Reviewcount' datatype='integer' name='[reviewcount]' role='measure' type='quantitative' />
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
      <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.518707' measure-ordering='alphabetic' measure-percentage='0.481293' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Custom SQL Query (yelpdata)' inline='true' name='federated.1c1wy4k154ai2o1e8urel1rb8wvt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.66.247.216' name='mysql.1jk340n1kgvdjk17raunt0cgn2q1'>
            <connection class='mysql' dbname='yelpdata' odbc-native-protocol='' one-time-sql='' port='3306' server='34.66.247.216' source-charset='' username='sheenahuang' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1jk340n1kgvdjk17raunt0cgn2q1' name='Custom SQL Query' type='text'>SELECT &#10;city.city_name,c.category,count(c.category)&#10;FROM&#10;(SELECT * FROM&#10;City &#10;WHERE City.population is not null) AS city INNER JOIN &#10;Address a ON city.city_id = a.city_id INNER JOIN &#10;Restaurant r ON a.business_id = r.business_id INNER JOIN&#10;Category c ON r.category_id = c.category_id&#10;GROUP BY city.city_name, c.category</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>city_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count(c.category)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count(c.category)]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>count(c.category)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='max' datatype='boolean' name='[Calculation_500884787665383425]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[count(c.category)]= {FIXED [city_name]:max([count(c.category)])}' />
      </column>
      <column caption='topCategory' datatype='string' name='[Calculation_500884787665809410]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR(if [Calculation_500884787665383425] then [category] END)' />
      </column>
      <column caption='countByCity' datatype='integer' name='[Calculation_500884787667648515]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [city_name]:COUNT([count(c.category)])}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[category]' role='dimension' type='nominal' />
      <column datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column-instance column='[category]' derivation='Max' name='[max:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.447279' measure-ordering='alphabetic' measure-percentage='0.552721' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Breakfast/Brunch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salad/vegetarian/vegan/Juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;international&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dessert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Persian/Iranian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East/Mediterranean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbecue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chicken Shop&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sandwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Noodles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diner/Deli/Cafeteria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American (New)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Restaurant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cajun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puerto Rican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American (Traditional)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Food Truck/Stand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Breakfast/Brunch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salad/vegetarian/vegan/Juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;international&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dessert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Persian/Iranian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East/Mediterranean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbecue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chicken Shop&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Noodles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diner/Deli/Cafeteria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American (New)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Restaurant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cajun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American (Traditional)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Food Truck/Stand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Surprise&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Goodyear&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matthews&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='checkin by Restaurant' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Weekday' />
        <param name='target' value='checkin by Restaurant' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (yelpdata)' name='federated.1c1wy4k154ai2o1e8urel1rb8wvt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1c1wy4k154ai2o1e8urel1rb8wvt'>
            <column datatype='real' name='[avg(r.stars)]' role='measure' type='quantitative' />
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[avg(r.stars)]' derivation='None' name='[none:avg(r.stars):qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg(r.stars)]' derivation='Sum' name='[sum:avg(r.stars):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:avg(r.stars):qk]' included-values='in-range'>
            <min>4.5629999999999997</min>
            <max>5.0</max>
          </filter>
          <filter class='categorical' column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]'>
            <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Chandler&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:avg(r.stars):qk]</column>
            <column>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[sum:avg(r.stars):qk]' field-type='quantitative' max='5.0' min='4.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[sum:avg(r.stars):qk]</rows>
        <cols>([federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk] / [federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:category:nk])</cols>
      </table>
      <simple-id uuid='{4264A070-F54A-4087-AE69-F1532F40F250}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (yelpdata)' name='federated.1c1wy4k154ai2o1e8urel1rb8wvt' />
          </datasources>
          <datasource-dependencies datasource='federated.1c1wy4k154ai2o1e8urel1rb8wvt'>
            <column caption='max' datatype='boolean' name='[Calculation_500884787665383425]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[count(c.category)]= {FIXED [city_name]:max([count(c.category)])}' />
            </column>
            <column caption='topCategory' datatype='string' name='[Calculation_500884787665809410]' role='measure' type='nominal'>
              <calculation class='tableau' formula='ATTR(if [Calculation_500884787665383425] then [category] END)' />
            </column>
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[count(c.category)]' role='measure' type='quantitative' />
            <column-instance column='[count(c.category)]' derivation='Max' name='[max:count(c.category):qk]' pivot='key' type='quantitative' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_500884787665809410]' derivation='User' name='[usr:Calculation_500884787665809410:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]'>
            <groupfilter function='level-members' level='[none:city_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[max:count(c.category):qk]' />
              <text column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[usr:Calculation_500884787665809410:nk]' />
              <color column='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[usr:Calculation_500884787665809410:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[max:count(c.category):qk]</rows>
        <cols>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]</cols>
      </table>
      <simple-id uuid='{8E76DF29-FCFA-4D5D-8030-A73E527E04FD}' />
    </worksheet>
    <worksheet name='checkin by Restaurant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (yelpdata)' name='federated.01hv7ur040hvum12ifrsb0s9bl8x' />
          </datasources>
          <datasource-dependencies datasource='federated.01hv7ur040hvum12ifrsb0s9bl8x'>
            <column caption='Checkins' datatype='integer' name='[checkins]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:nk]' pivot='key' type='nominal' />
            <column-instance column='[checkins]' derivation='Sum' name='[sum:checkins:qk]' pivot='key' type='quantitative' />
            <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Dunkin&apos; Donuts&quot;' />
              <groupfilter from='&quot;McDonald&apos;s&quot;' function='range' level='[none:name:nk]' to='&quot;Starbucks&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:weekday:nk]' />
              <text column='[federated.01hv7ur040hvum12ifrsb0s9bl8x].[sum:checkins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[sum:checkins:qk]</rows>
        <cols>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:hour:qk]</cols>
      </table>
      <simple-id uuid='{BD5F82B1-4194-4A0D-A452-0C71B5EBC649}' />
    </worksheet>
    <worksheet name='restaurant by checkins'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurant + checkin' name='federated.0ky0a4x04ka1501421enq19wbpto' />
          </datasources>
          <datasource-dependencies datasource='federated.0ky0a4x04ka1501421enq19wbpto'>
            <column caption='Checkins' datatype='integer' name='[checkins]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[checkins]' derivation='Sum' name='[sum:checkins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ky0a4x04ka1501421enq19wbpto].[none:name:nk]' direction='DESC' using='[federated.0ky0a4x04ka1501421enq19wbpto].[sum:checkins:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ky0a4x04ka1501421enq19wbpto].[sum:checkins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ky0a4x04ka1501421enq19wbpto].[none:name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{BDE451B0-B468-4A0F-94C9-7B9B58AB7ABA}' />
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='restaurant by checkins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ky0a4x04ka1501421enq19wbpto].[none:business_id:nk]</field>
            <field>[federated.0ky0a4x04ka1501421enq19wbpto].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70E82B06-5F52-4826-A7A6-1558B022F1A4}' />
    </window>
    <window class='worksheet' name='checkin by Restaurant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:weekday:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:hour:ok]</field>
            <field>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:hour:qk]</field>
            <field>[federated.01hv7ur040hvum12ifrsb0s9bl8x].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{686BFF95-20C9-4358-A144-C4EC7393B6BD}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:avg(r.stars):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[max:category:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:avg(r.stars):qk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:category:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[sum:count(c.category):qk]</field>
            <field>[federated.1tnjn8x09scham1axbljb1kh7cp2].[none:city_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA6352DE-5AC1-44E5-99A0-951CC27EC012}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[usr:Calculation_500884787665809410:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:category:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:city_name:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[none:count(c.category):qk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[sum:count(c.category):qk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[usr:Calculation_500884787660558336:nk]</field>
            <field>[federated.1c1wy4k154ai2o1e8urel1rb8wvt].[usr:Calculation_500884787665809410:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52FFF98A-2D17-47E6-B0EE-98C73CB8D07E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 3' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de3SU9YH/8fcz98xkEgi5hyQkgNwh3OSuVsSKt1URatVit7bHuna3ttse
      63a3p9fTrbW1tscfnmprLbYqdAtdS6kiKpeKBEHCJQlCkEBCyIUkJJOZTOby/P7IYdY0EdAS
      YvJ8XudwDjzzPDPfZ0i+n+d7eZ6vYZqmiYiIWIphGIZtoAshIiIDQwEgImJRCgAREYtSAIiI
      WJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIi
      FqUAEBGxKAWAyBCzbds2nnjiCeLx+EAXRT7mHANdAJHz2bRpE4ZhsHjxYgzDGOjifKzFYjF+
      97vfkZGRMdBFkUFALQD52Hvsscd4/PHHObt43cmTJ3niiSc4dOjQAJfs4+fdd9+lrq6ORYsW
      9WtYPvfcc6xfv77f3l8uDbUA5GPvwQcfxG63Jyq0+vp6Vq9eTX5+PuPGjRvg0n18xONxdu/e
      jcfjYfLkyf0aAOvWrSMtLY1bbrml3z5D+p8CQD42qqqqeOeddwiHwxQWFjJjxgy8Xi9paWkA
      GIbBoUOH2LNnD/F4nPLycpKTk3G5XEyePJmysjLcbjdz5sxJVH5nzpzhwIEDZGVlMXr06PNW
      ipFIhNLSUoYPH47H4+HAgQO0trYyduxYpk+fjsfjIRaLUV1dTVVVFS0tLRiGQVFREVOnTsXl
      chGPxxNlTE9PZ+/evXR0dDBp0iQuu+wyKioqePfdd3G5XMydO5eRI0f2KO+OHTs4fvw4I0aM
      YPbs2eTn519QZR4MBtmyZQslJSXk5OScd//jx49TXl5OfX09GRkZzJgxg6ysLAKBQGJ7e3s7
      6enpTJ48mby8PM6cOcPu3bsJBoMAvPbaawAUFRUxatSoxP9jWVkZp0+fZsyYMcycOZPU1NTE
      54bDYcrLy6mursZut5Ofn08sFqO4uJjhw4djmiaNjY2UlpZSW1tLZmYm06dPT7x/NBrlnXfe
      weFwUFJSQkVFBSdPnmTs2LEcP36ctLQ0Jk6cmPjOduzYgcfjoaSkRF2If0cBIB8Lp06d4sc/
      /jFHjhzBZuvumfz5z3/O+PHjeeKJJzAMg1//+tds2rSJ9evXE4/H+etf/8rWrVsZPnw4//Ef
      /8ELL7zAiRMnWLVqFfn5+QDs2rWLRx55hC9+8YuMHj36vOXo7OzkkUceAcDlctHa2kooFMLj
      8fDwww+zePFimpqa+OY3v8np06cxDINIJILT6eTee+9l2bJlxGIxfvnLX1JVVcWIESNobm4m
      FArh9/spLi7mxIkTdHR0EAwGmTdvHt/61rcYPnw49fX1/OxnP2Pnzp14vV5CoRAjR47k4Ycf
      Zvz48Rf0HVZWVvK5z33unBWdaZq8/fbbPPbYY9TV1SVC68477+See+7hD3/4A2vWrCEWi2EY
      Bp2dneTn5/OLX/yC+vp6Hn30UU6fPk1LSwuPPvooAHfddReFhYXs3buX73//+wQCAVwuF6FQ
      iLlz5/Ltb38bp9NJJBLhiSee4OWXX058b2dD9dvf/jazZs2iurqaH/7wh1RWVuLxeAiHw+Tl
      5fHVr36VGTNmEA6HefLJJ0lKSuLTn/40//3f/00oFOJb3/oWTzzxBA6Hg2eeeQaXywXAz372
      M+bMmUNJScl5v0OrUQDIgDNNk9WrV2OaJo8//jgpKSns27eP4cOHA9DV1ZWo0G677Tays7P5
      8Y9/zB133MGiRYtwOp3k5+dz7bXX8pOf/IQtW7Zw5513YrPZ2Lp1K0CPVsH5hMNhXC4Xy5cv
      Z9y4cRw6dIif//znvP322yxevBiXy8U111zD9OnTyc3Npaamhu9+97usXbuWpUuX4na76erq
      wuFwsHz5csaPH09paSmrVq2iuLiYBx98kIyMDJ588knKyso4c+YMw4cP5y9/+Qtbt27lK1/5
      CjfccAOVlZX827/9G88//zzf+c53zlvu119/nZEjR3LZZZedc7/W1lYef/xx2traeOihh5g2
      bRonTpxIfD95eXl86UtfYvz48fh8PtasWcPq1avZtGkTN954Iz/+8Y/5+te/nghegMzMTNra
      2nj66aex2Wz85Cc/YezYsfzqV7/id7/7Hddeey1XXnklW7du5Q9/+AMzZszgc5/7HMOHD+dP
      f/oT69atIx6PE4/HefbZZ9m3bx8PPfQQc+fOpby8nEceeYQnnniCJ598EtM06erqoqamhkcf
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      dVWXlAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='checkin by Restaurant' width='384'>
      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
      +CK/+c1vSCaTkz7Xx0IAOjs72bZtG7lcjl27drF//35uu+22UzZAmW4URcFxnPHZ0ky7WyzL
      4ne/+x2NjY2sWnXmzaWnk9dee41sNsuOHTvYtm3bjPu5fT4fixYtYs2aNVx33XXs3r17Ru2x
      bZve3l6+8pWvcNttt/Hee+/NqD3HMvb9hqMNa2YDmzZtYmhoiFtvvXXG3XfZbJY9e/awb98+
      2tra2LJly4zaA24/lYaGBtasWcMnPvGJ0/qOfyxcQA0NDeOtIjdv3szq1avp7OykuLj4nPqY
      lyxZwsaNG6msrDynsYcTsX//fqJRtwNUa2srtbW1M15+4Utf+hJSSvbt24ff75/xGzYWizE8
      PExrayvNzc3U1dXNqD2KopDL5eju7qajo+Oc+9iPxTRNent7SSQSdHZ2Ul1dTTgcZs+ePbS3
      t7N06dJzblMmk2FoaIhUKkV7eztlZWXs3buX1atX09bWRnl5+YS9w88WhmHQ19dHMpkc96/f
      ddddgOvKu+yyy86ZLWOk02mGh4fHr9HcuXMZGRmhtbWVlpaW03Ipfuz2ATQ1NY1vfS4vLz/t
      1oxT5dChQ2SzWZYtWzbjM6Th4WF6enoAt9tXY2PjrKlTkk6n3Q5k5zBgdyJ0XWf37t2UlJSw
      YMGCGV+5ZbNZmpqaiMfjNDY2zpg9+XyelpaWcVdmTU0NkUiEDz74gKKiohnxcScSCbq7uwFX
      LOvr62lvbx+/56urqykuPndNeT58jWpra8cFqL+/n4qKinP++R173yuKQmNjIwC7du2iuLiY
      hQsXTtqmj50AeHh4eHhMDx+LGICHh4eHx/TjCYCHh4fHeYonAB4eHh7nKZ4AeHh4eJyneALg
      4eHhcZ7iCYCHh4fHeYonAB4eHh7nKZ4AeHh4nBU2bdo0Xntp8+bNDA8Pz7BFHh/GEwAPD4+z
      wosvvkgikQDg1VdfZXBwECEEzc3NdHd3I6Ukk8mQz+cRQjA0NIRpmiSTSYaHh2e8jtT5wMei
      FpCHh8fHk/3795NMJhkaGgLgiSeeoKWlhVQqxdq1a8dr2Vx66aU8+OCD3HnnnTz00EOYpsn9
      998/YyWXzxc8AfDw8DgrCCHYvn07RUVFDAwMAK5b6Oc//zmtra089dRTzJ8/HyEEUsrxSruG
      YfDwww+PFzr0OHt4AuDh4XFWUFWVL3zhC9TX14+vAAKBAMlkksHBQSKRCIqikM1mSaVS4wXX
      Fi9e7A3+5whPADw8PM4KdXV14+Wux9pL3nnnnfzwhz8kGAxy3333MTw8zMMPP8yOHTuoq6sj
      FApRXV09w5afP3jVQD08PM4ptm2jqiqqqo67fjRNm/Ey3ecjngB4eHh4nKd4aaAeHh4e5yme
      AHh4eHicp/x/KkpDsbhE/HQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='restaurant by checkins' width='384'>
      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
      CAsLw2w209DQwODgIEajUdnncDhoampCkqQR38IvV40ytM/hcAwbCR0cHKz0C66srGTOnDlK
      elmWqaurw+VyYTKZiImJuep7GgoesbGxREdHM2/ePJxOJ6dOneJ3v/sdtbW1FBQUiAAgCDfZ
      UH3+xdXaTqeTjRs3EhYWxrx585ROHhUVFSQlJQ2rBpdlGYvFwunTp0lJSSEsLMzvGiIAXIfE
      xERiYmI4ffo0mzZt4uGHH8ZoNOJwONi5cyfnzp3DYDAwefLkKz6nSqVSCvjy8nJqamqYOHEi
      cOHtPzg4mKSkJPR6PVu2bGHJkiXEx8cjSRJtbW189NFH2O12pk+fPmJbxhexWq2Ul5cTGhpK
      fHw8gYGB6HQ6srKySExMpK6uTqmCEgThi3k8Hnp6evxe5iwWC263m87OTqUaR6vVEhwcrFQn
      19XV0dvbS0JCAgaDAZ/Px1//+lcKCwtZvXq1X03Ff//3f2M2m1mzZg3x8fFK7UJ/fz9//OMf
      6e7u5r777hs2r5oIANchPT2d2bNnc/bsWd5++23sdjupqam0tLSwc+dO+vr6uOuuu8jOzr7i
      c2q1WpKSkggMDKS6upo//elP3HHHHeh0OqZNm8bkyZPJz8/n2LFjlJaW8tOf/pRly5ahVqs5
      ePAgpaWlmM1m1q5de00jkfv6+njzzTfp7Oxk3rx5JCUloVarqayspLS0FK1WS1ZW1lWfVxBG
      q+7ubtavX09zc7Oyrb29ne7ubv73f/9XqTlISUlhzZo1JCUlARcCwCuvvEJKSgpxcXG4XC5K
      S0tZvnw5Dz/8sF8twvLly9m5cyc///nPCQ8P9xtHAHDvvfeyZMmSYWXCLQ8AF2fgagooSZL8
      /vv8vovTfP6Yq83Xpa7/eVqtluXLl+NwONi8eTPvvPOOsk+v17NgwQIeffRRpS7+4nNc6npq
      tZrMzEwWL17M3r17KS4upri4GJPJxPe+9z0mT55Meno6a9euBS5MUldWVqYcn5SUxOrVq/0K
      6aHrjnTNz+8LCgpi6tSpfPLJJ7z11lvKPq/XS2hoKHffffdVBTRBGO30ej0ZGRnDeuB9XlRU
      lF9df1ZWFmvXruXcuXNYLBbUajVf//rXufvuu/0aciVJ4sEHH2TatGmcPHmS9vZ2enp6AFiw
      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
    </thumbnail>
  </thumbnails>
</workbook>
